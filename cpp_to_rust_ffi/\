// TODO
// - CRUD operations on a vertex
//  - If you delete a vertex, then you should also delete the edges that refer to it
// - CRUD operations on an edge
trait Graph<Vertex, Edge> {
    type VertexHandle = usize;
    type EdgeHandle = (usize, usize);

    fn new() -> Self;

    fn num_vertices() -> usize;
    fn vertex(handle: VertexHandle) -> Vertex;
    fn add_vertex(data: Vertex) -> VertexHandle;
    fn remove_vertex(handle: VertexHandle) -> Option<Vertex>;
    fn update_vertex(handle: VertexHandle, data: Vertex);

    fn num_edges() -> usize;
    fn edge(handle: EdgeHandle) -> Edge;
    fn add_edge(first: VertexHandle, second: VertexHandle, data: Edge) -> EdgeHandle;
    fn remove_edge(handle: EdgeHandle) -> Option<Edge>;
    fn update_edge(handle: EdgeHandle, data: Edge);
}

fn main() {
    println!("Hello, world!");
}
